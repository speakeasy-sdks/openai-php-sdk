<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Openai\SDK\Models\Shared;


/**
 * ThreadObject - Represents a thread that contains [messages](/docs/api-reference/messages).
 * 
 * @package Openai\SDK\Models\Shared
 * @access public
 */
class ThreadObject
{
    /**
     * The Unix timestamp (in seconds) for when the thread was created.
     * 
     * @var int $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $createdAt;
    
    /**
     * The identifier, which can be referenced in API endpoints.
     * 
     * @var string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.
     * 
     * 
     * 
     * @var \Openai\SDK\Models\Shared\ThreadObjectMetadata $metadata
     */
	#[\JMS\Serializer\Annotation\SerializedName('metadata')]
    #[\JMS\Serializer\Annotation\Type('Openai\SDK\Models\Shared\ThreadObjectMetadata')]
    public ThreadObjectMetadata $metadata;
    
    /**
     * The object type, which is always `thread`.
     * 
     * @var \Openai\SDK\Models\Shared\ThreadObjectObject $object
     */
	#[\JMS\Serializer\Annotation\SerializedName('object')]
    #[\JMS\Serializer\Annotation\Type('enum<Openai\SDK\Models\Shared\ThreadObjectObject>')]
    public ThreadObjectObject $object;
    
	public function __construct()
	{
		$this->createdAt = 0;
		$this->id = "";
		$this->metadata = new \Openai\SDK\Models\Shared\ThreadObjectMetadata();
		$this->object = \Openai\SDK\Models\Shared\ThreadObjectObject::Thread;
	}
}
