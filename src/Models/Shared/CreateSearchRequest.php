<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Openai\SDK\Models\Shared;


class CreateSearchRequest
{
    /**
     * Up to 200 documents to search over, provided as a list of strings.
     * 
     * 
     * The maximum document length (in tokens) is 2034 minus the number of tokens in the query.
     * 
     * You should specify either `documents` or a `file`, but not both.
     * 
     * 
     * @var ?array<string> $documents
     */
	#[\JMS\Serializer\Annotation\SerializedName('documents')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $documents = null;
    
    /**
     * The ID of an uploaded file that contains documents to search over.
     * 
     * 
     * You should specify either `documents` or a `file`, but not both.
     * 
     * 
     * @var ?string $file
     */
	#[\JMS\Serializer\Annotation\SerializedName('file')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $file = null;
    
    /**
     * The maximum number of documents to be re-ranked and returned by search.
     * 
     * 
     * This flag only takes effect when `file` is set.
     * 
     * 
     * @var ?int $maxRerank
     */
	#[\JMS\Serializer\Annotation\SerializedName('max_rerank')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $maxRerank = null;
    
    /**
     * Query to search against the documents.
     * 
     * @var string $query
     */
	#[\JMS\Serializer\Annotation\SerializedName('query')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $query;
    
    /**
     * A special boolean flag for showing metadata. If set to `true`, each document entry in the returned JSON will contain a "metadata" field.
     * 
     * 
     * This flag only takes effect when `file` is set.
     * 
     * 
     * @var ?bool $returnMetadata
     */
	#[\JMS\Serializer\Annotation\SerializedName('return_metadata')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $returnMetadata = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('user')]
    #[\JMS\Serializer\Annotation\Type('mixed')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public mixed $user = null;
    
	public function __construct()
	{
		$this->documents = null;
		$this->file = null;
		$this->maxRerank = null;
		$this->query = "";
		$this->returnMetadata = null;
		$this->user = null;
	}
}
