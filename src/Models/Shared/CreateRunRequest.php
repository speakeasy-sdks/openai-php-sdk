<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Openai\SDK\Models\Shared;


class CreateRunRequest
{
    /**
     * Appends additional instructions at the end of the instructions for the run. This is useful for modifying the behavior on a per-run basis without overriding other instructions.
     * 
     * @var ?string $additionalInstructions
     */
	#[\JMS\Serializer\Annotation\SerializedName('additional_instructions')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $additionalInstructions = null;
    
    /**
     * The ID of the [assistant](/docs/api-reference/assistants) to use to execute this run.
     * 
     * @var string $assistantId
     */
	#[\JMS\Serializer\Annotation\SerializedName('assistant_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $assistantId;
    
    /**
     * Overrides the [instructions](/docs/api-reference/assistants/createAssistant) of the assistant. This is useful for modifying the behavior on a per-run basis.
     * 
     * @var ?string $instructions
     */
	#[\JMS\Serializer\Annotation\SerializedName('instructions')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $instructions = null;
    
    /**
     * Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.
     * 
     * 
     * 
     * @var ?\Openai\SDK\Models\Shared\CreateRunRequestMetadata $metadata
     */
	#[\JMS\Serializer\Annotation\SerializedName('metadata')]
    #[\JMS\Serializer\Annotation\Type('Openai\SDK\Models\Shared\CreateRunRequestMetadata')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateRunRequestMetadata $metadata = null;
    
    /**
     * The ID of the [Model](/docs/api-reference/models) to be used to execute this run. If a value is provided here, it will override the model associated with the assistant. If not, the model associated with the assistant will be used.
     * 
     * @var ?string $model
     */
	#[\JMS\Serializer\Annotation\SerializedName('model')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $model = null;
    
    /**
     * Override the tools the assistant can use for this run. This is useful for modifying the behavior on a per-run basis.
     * 
     * @var ?array<mixed> $tools
     */
	#[\JMS\Serializer\Annotation\SerializedName('tools')]
    #[\JMS\Serializer\Annotation\Type('array<mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $tools = null;
    
	public function __construct()
	{
		$this->additionalInstructions = null;
		$this->assistantId = "";
		$this->instructions = null;
		$this->metadata = null;
		$this->model = null;
		$this->tools = null;
	}
}
