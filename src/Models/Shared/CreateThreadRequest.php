<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Openai\SDK\Models\Shared;


class CreateThreadRequest
{
    /**
     * A list of [messages](/docs/api-reference/messages) to start the thread with.
     * 
     * @var ?array<\Openai\SDK\Models\Shared\CreateMessageRequest> $messages
     */
	#[\JMS\Serializer\Annotation\SerializedName('messages')]
    #[\JMS\Serializer\Annotation\Type('array<Openai\SDK\Models\Shared\CreateMessageRequest>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $messages = null;
    
    /**
     * Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.
     * 
     * 
     * 
     * @var ?\Openai\SDK\Models\Shared\CreateThreadRequestMetadata $metadata
     */
	#[\JMS\Serializer\Annotation\SerializedName('metadata')]
    #[\JMS\Serializer\Annotation\Type('Openai\SDK\Models\Shared\CreateThreadRequestMetadata')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateThreadRequestMetadata $metadata = null;
    
	public function __construct()
	{
		$this->messages = null;
		$this->metadata = null;
	}
}
