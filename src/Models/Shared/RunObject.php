<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Openai\SDK\Models\Shared;


/**
 * RunObject - Represents an execution run on a [thread](/docs/api-reference/threads).
 * 
 * @package Openai\SDK\Models\Shared
 * @access public
 */
class RunObject
{
    /**
     * The ID of the [assistant](/docs/api-reference/assistants) used for execution of this run.
     * 
     * @var string $assistantId
     */
	#[\JMS\Serializer\Annotation\SerializedName('assistant_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $assistantId;
    
    /**
     * The Unix timestamp (in seconds) for when the run was cancelled.
     * 
     * @var int $cancelledAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('cancelled_at')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $cancelledAt;
    
    /**
     * The Unix timestamp (in seconds) for when the run was completed.
     * 
     * @var int $completedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('completed_at')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $completedAt;
    
    /**
     * The Unix timestamp (in seconds) for when the run was created.
     * 
     * @var int $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $createdAt;
    
    /**
     * The Unix timestamp (in seconds) for when the run will expire.
     * 
     * @var int $expiresAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('expires_at')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $expiresAt;
    
    /**
     * The Unix timestamp (in seconds) for when the run failed.
     * 
     * @var int $failedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('failed_at')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $failedAt;
    
    /**
     * The list of [File](/docs/api-reference/files) IDs the [assistant](/docs/api-reference/assistants) used for this run.
     * 
     * @var array<string> $fileIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('file_ids')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $fileIds;
    
    /**
     * The identifier, which can be referenced in API endpoints.
     * 
     * @var string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * The instructions that the [assistant](/docs/api-reference/assistants) used for this run.
     * 
     * @var string $instructions
     */
	#[\JMS\Serializer\Annotation\SerializedName('instructions')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $instructions;
    
    /**
     * The last error associated with this run. Will be `null` if there are no errors.
     * 
     * @var \Openai\SDK\Models\Shared\LastError $lastError
     */
	#[\JMS\Serializer\Annotation\SerializedName('last_error')]
    #[\JMS\Serializer\Annotation\Type('Openai\SDK\Models\Shared\LastError')]
    public LastError $lastError;
    
    /**
     * Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.
     * 
     * 
     * 
     * @var \Openai\SDK\Models\Shared\RunObjectMetadata $metadata
     */
	#[\JMS\Serializer\Annotation\SerializedName('metadata')]
    #[\JMS\Serializer\Annotation\Type('Openai\SDK\Models\Shared\RunObjectMetadata')]
    public RunObjectMetadata $metadata;
    
    /**
     * The model that the [assistant](/docs/api-reference/assistants) used for this run.
     * 
     * @var string $model
     */
	#[\JMS\Serializer\Annotation\SerializedName('model')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $model;
    
    /**
     * The object type, which is always `thread.run`.
     * 
     * @var \Openai\SDK\Models\Shared\RunObjectObject $object
     */
	#[\JMS\Serializer\Annotation\SerializedName('object')]
    #[\JMS\Serializer\Annotation\Type('enum<Openai\SDK\Models\Shared\RunObjectObject>')]
    public RunObjectObject $object;
    
    /**
     * Details on the action required to continue the run. Will be `null` if no action is required.
     * 
     * @var \Openai\SDK\Models\Shared\RequiredAction $requiredAction
     */
	#[\JMS\Serializer\Annotation\SerializedName('required_action')]
    #[\JMS\Serializer\Annotation\Type('Openai\SDK\Models\Shared\RequiredAction')]
    public RequiredAction $requiredAction;
    
    /**
     * The Unix timestamp (in seconds) for when the run was started.
     * 
     * @var int $startedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('started_at')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $startedAt;
    
    /**
     * The status of the run, which can be either `queued`, `in_progress`, `requires_action`, `cancelling`, `cancelled`, `failed`, `completed`, or `expired`.
     * 
     * @var \Openai\SDK\Models\Shared\RunObjectStatus $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<Openai\SDK\Models\Shared\RunObjectStatus>')]
    public RunObjectStatus $status;
    
    /**
     * The sampling temperature used for this run. If not set, defaults to 1.
     * 
     * @var ?float $temperature
     */
	#[\JMS\Serializer\Annotation\SerializedName('temperature')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $temperature = null;
    
    /**
     * The ID of the [thread](/docs/api-reference/threads) that was executed on as a part of this run.
     * 
     * @var string $threadId
     */
	#[\JMS\Serializer\Annotation\SerializedName('thread_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $threadId;
    
    /**
     * The list of tools that the [assistant](/docs/api-reference/assistants) used for this run.
     * 
     * @var array<mixed> $tools
     */
	#[\JMS\Serializer\Annotation\SerializedName('tools')]
    #[\JMS\Serializer\Annotation\Type('array<mixed>')]
    public array $tools;
    
    /**
     * Usage statistics related to the run. This value will be `null` if the run is not in a terminal state (i.e. `in_progress`, `queued`, etc.).
     * 
     * @var \Openai\SDK\Models\Shared\RunCompletionUsage $usage
     */
	#[\JMS\Serializer\Annotation\SerializedName('usage')]
    #[\JMS\Serializer\Annotation\Type('Openai\SDK\Models\Shared\RunCompletionUsage')]
    public RunCompletionUsage $usage;
    
	public function __construct()
	{
		$this->assistantId = "";
		$this->cancelledAt = 0;
		$this->completedAt = 0;
		$this->createdAt = 0;
		$this->expiresAt = 0;
		$this->failedAt = 0;
		$this->fileIds = [];
		$this->id = "";
		$this->instructions = "";
		$this->lastError = new \Openai\SDK\Models\Shared\LastError();
		$this->metadata = new \Openai\SDK\Models\Shared\RunObjectMetadata();
		$this->model = "";
		$this->object = \Openai\SDK\Models\Shared\RunObjectObject::ThreadRun;
		$this->requiredAction = new \Openai\SDK\Models\Shared\RequiredAction();
		$this->startedAt = 0;
		$this->status = \Openai\SDK\Models\Shared\RunObjectStatus::Queued;
		$this->temperature = null;
		$this->threadId = "";
		$this->tools = [];
		$this->usage = new \Openai\SDK\Models\Shared\RunCompletionUsage();
	}
}
